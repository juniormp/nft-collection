"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ethers */ \"../../../node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3modal */ \"../node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants */ \"./constants/index.js\");\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../styles/Home.module.css */ \"./styles/Home.module.css\");\n/* harmony import */ var _styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6__);\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction Home() {\n    _s();\n    // walletConnected keep track of whether the user's wallet is connected or not\n    const [walletConnected, setWalletConnected] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    // presaleStarted keeps track of whether the presale has started or not\n    const [presaleStarted, setPresaleStarted] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    // presaleEnded keeps track of whether the presale ended\n    const [presaleEnded, setPresaleEnded] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    // loading is set to true when we are waiting for a transaction to get mined\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    // checks if the currently connected MetaMask wallet is the owner of the contract\n    const [isOwner, setIsOwner] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(false);\n    // tokenIdsMinted keeps track of the number of tokenIds that have been minted\n    const [tokenIdsMinted, setTokenIdsMinted] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"0\");\n    // Create a reference to the Web3 Modal (used for connecting to Metamask) which persists as long as the page is open\n    const web3ModalRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)();\n    /**\n   * presaleMint: Mint an NFT during the presale\n   */ const presaleMint = async ()=>{\n        try {\n            // We need a Signer here since this is a 'write' transaction.\n            const signer = await getProviderOrSigner(true);\n            // Create a new instance of the Contract with a Signer, which allows\n            // update methods\n            const nftContract = new ethers__WEBPACK_IMPORTED_MODULE_5__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.NFT_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.abi, signer);\n            // call the presaleMint from the contract, only whitelisted addresses would be able to mint\n            const tx = await nftContract.presaleMint({\n                // value signifies the cost of one crypto dev which is \"0.01\" eth.\n                // We are parsing `0.01` string to ether using the utils library from ethers.js\n                value: ethers__WEBPACK_IMPORTED_MODULE_5__.utils.parseEther(\"0.01\")\n            });\n            setLoading(true);\n            // wait for the transaction to get mined\n            await tx.wait();\n            setLoading(false);\n            window.alert(\"You successfully minted a Crypto Dev!\");\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    /**\n   * publicMint: Mint an NFT after the presale\n   */ const publicMint = async ()=>{\n        try {\n            // We need a Signer here since this is a 'write' transaction.\n            const signer = await getProviderOrSigner(true);\n            // Create a new instance of the Contract with a Signer, which allows\n            // update methods\n            const nftContract = new ethers__WEBPACK_IMPORTED_MODULE_5__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.NFT_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.abi, signer);\n            // call the mint from the contract to mint the Crypto Dev\n            const tx = await nftContract.mint({\n                // value signifies the cost of one crypto dev which is \"0.01\" eth.\n                // We are parsing `0.01` string to ether using the utils library from ethers.js\n                value: ethers__WEBPACK_IMPORTED_MODULE_5__.utils.parseEther(\"0.01\")\n            });\n            setLoading(true);\n            // wait for the transaction to get mined\n            await tx.wait();\n            setLoading(false);\n            window.alert(\"You successfully minted a Crypto Dev!\");\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    /*\n      connectWallet: Connects the MetaMask wallet\n    */ const connectWallet = async ()=>{\n        try {\n            // Get the provider from web3Modal, which in our case is MetaMask\n            // When used for the first time, it prompts the user to connect their wallet\n            await getProviderOrSigner();\n            setWalletConnected(true);\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    /**\n   * startPresale: starts the presale for the NFT Collection\n   */ const startPresale = async ()=>{\n        try {\n            // We need a Signer here since this is a 'write' transaction.\n            const signer = await getProviderOrSigner(true);\n            // Create a new instance of the Contract with a Signer, which allows\n            // update methods\n            const nftContract = new ethers__WEBPACK_IMPORTED_MODULE_5__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.NFT_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.abi, signer);\n            // call the startPresale from the contract\n            const tx = await nftContract.startPresale();\n            setLoading(true);\n            // wait for the transaction to get mined\n            await tx.wait();\n            setLoading(false);\n            // set the presale started to true\n            await checkIfPresaleStarted();\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    /**\n   * checkIfPresaleStarted: checks if the presale has started by quering the `presaleStarted`\n   * variable in the contract\n   */ const checkIfPresaleStarted = async ()=>{\n        try {\n            // Get the provider from web3Modal, which in our case is MetaMask\n            // No need for the Signer here, as we are only reading state from the blockchain\n            const provider = await getProviderOrSigner();\n            // We connect to the Contract using a Provider, so we will only\n            // have read-only access to the Contract\n            const nftContract = new ethers__WEBPACK_IMPORTED_MODULE_5__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.NFT_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.abi, provider);\n            // call the presaleStarted from the contract\n            const _presaleStarted = await nftContract.presaleStarted();\n            if (!_presaleStarted) {\n                await getOwner();\n            }\n            setPresaleStarted(_presaleStarted);\n            return _presaleStarted;\n        } catch (err) {\n            console.error(err);\n            return false;\n        }\n    };\n    /**\n   * checkIfPresaleEnded: checks if the presale has ended by quering the `presaleEnded`\n   * variable in the contract\n   */ const checkIfPresaleEnded = async ()=>{\n        try {\n            // Get the provider from web3Modal, which in our case is MetaMask\n            // No need for the Signer here, as we are only reading state from the blockchain\n            const provider = await getProviderOrSigner();\n            // We connect to the Contract using a Provider, so we will only\n            // have read-only access to the Contract\n            const nftContract = new ethers__WEBPACK_IMPORTED_MODULE_5__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.NFT_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.abi, provider);\n            // call the presaleEnded from the contract\n            const _presaleEnded = await nftContract.presaleEnded();\n            // _presaleEnded is a Big Number, so we are using the lt(less than function) instead of `<`\n            // Date.now()/1000 returns the current time in seconds\n            // We compare if the _presaleEnded timestamp is less than the current time\n            // which means presale has ended\n            const hasEnded = _presaleEnded.lt(Math.floor(Date.now() / 1000));\n            if (hasEnded) {\n                setPresaleEnded(true);\n            } else {\n                setPresaleEnded(false);\n            }\n            return hasEnded;\n        } catch (err) {\n            console.error(err);\n            return false;\n        }\n    };\n    /**\n   * getOwner: calls the contract to retrieve the owner\n   */ const getOwner = async ()=>{\n        try {\n            // Get the provider from web3Modal, which in our case is MetaMask\n            // No need for the Signer here, as we are only reading state from the blockchain\n            const provider = await getProviderOrSigner();\n            // We connect to the Contract using a Provider, so we will only\n            // have read-only access to the Contract\n            const nftContract = new ethers__WEBPACK_IMPORTED_MODULE_5__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.NFT_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.abi, provider);\n            // call the owner function from the contract\n            const _owner = await nftContract.owner();\n            // We will get the signer now to extract the address of the currently connected MetaMask account\n            const signer = await getProviderOrSigner(true);\n            // Get the address associated to the signer which is connected to  MetaMask\n            const address = await signer.getAddress();\n            if (address.toLowerCase() === _owner.toLowerCase()) {\n                setIsOwner(true);\n            }\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n    /**\n   * getTokenIdsMinted: gets the number of tokenIds that have been minted\n   */ const getTokenIdsMinted = async ()=>{\n        try {\n            // Get the provider from web3Modal, which in our case is MetaMask\n            // No need for the Signer here, as we are only reading state from the blockchain\n            const provider = await getProviderOrSigner();\n            // We connect to the Contract using a Provider, so we will only\n            // have read-only access to the Contract\n            const nftContract = new ethers__WEBPACK_IMPORTED_MODULE_5__.Contract(_constants__WEBPACK_IMPORTED_MODULE_4__.NFT_CONTRACT_ADDRESS, _constants__WEBPACK_IMPORTED_MODULE_4__.abi, provider);\n            // call the tokenIds from the contract\n            const _tokenIds = await nftContract.tokenIds();\n            //_tokenIds is a `Big Number`. We need to convert the Big Number to a string\n            setTokenIdsMinted(_tokenIds.toString());\n        } catch (err) {\n            console.error(err);\n        }\n    };\n    /**\n   * Returns a Provider or Signer object representing the Ethereum RPC with or without the\n   * signing capabilities of metamask attached\n   *\n   * A `Provider` is needed to interact with the blockchain - reading transactions, reading balances, reading state, etc.\n   *\n   * A `Signer` is a special type of Provider used in case a `write` transaction needs to be made to the blockchain, which involves the connected account\n   * needing to make a digital signature to authorize the transaction being sent. Metamask exposes a Signer API to allow your website to\n   * request signatures from the user using Signer functions.\n   *\n   * @param {*} needSigner - True if you need the signer, default false otherwise\n   */ const getProviderOrSigner = async function() {\n        let needSigner = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n        // Connect to Metamask\n        // Since we store `web3Modal` as a reference, we need to access the `current` value to get access to the underlying object\n        const provider = await web3ModalRef.current.connect();\n        const web3Provider = new ethers__WEBPACK_IMPORTED_MODULE_5__.providers.Web3Provider(provider);\n        // If user is not connected to the Goerli network, let them know and throw an error\n        const { chainId  } = await web3Provider.getNetwork();\n        if (chainId !== 5) {\n            window.alert(\"Change the network to Goerli\");\n            throw new Error(\"Change network to Goerli\");\n        }\n        if (needSigner) {\n            const signer = web3Provider.getSigner();\n            return signer;\n        }\n        return web3Provider;\n    };\n    // useEffects are used to react to changes in state of the website\n    // The array at the end of function call represents what state changes will trigger this effect\n    // In this case, whenever the value of `walletConnected` changes - this effect will be called\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        // if wallet is not connected, create a new instance of Web3Modal and connect the MetaMask wallet\n        if (!walletConnected) {\n            // Assign the Web3Modal class to the reference object by setting it's `current` value\n            // The `current` value is persisted throughout as long as this page is open\n            web3ModalRef.current = new (web3modal__WEBPACK_IMPORTED_MODULE_3___default())({\n                network: \"goerli\",\n                providerOptions: {},\n                disableInjectedProvider: false\n            });\n            connectWallet();\n            // Check if presale has started and ended\n            const _presaleStarted = checkIfPresaleStarted();\n            if (_presaleStarted) {\n                checkIfPresaleEnded();\n            }\n            getTokenIdsMinted();\n            // Set an interval which gets called every 5 seconds to check presale has ended\n            const presaleEndedInterval = setInterval(async function() {\n                const _presaleStarted = await checkIfPresaleStarted();\n                if (_presaleStarted) {\n                    const _presaleEnded = await checkIfPresaleEnded();\n                    if (_presaleEnded) {\n                        clearInterval(presaleEndedInterval);\n                    }\n                }\n            }, 5 * 1000);\n            // set an interval to get the number of token Ids minted every 5 seconds\n            setInterval(async function() {\n                await getTokenIdsMinted();\n            }, 5 * 1000);\n        }\n    }, [\n        walletConnected\n    ]);\n    /*\n      renderButton: Returns a button based on the state of the dapp\n    */ const renderButton = ()=>{\n        // If wallet is not connected, return a button which allows them to connect their wllet\n        if (!walletConnected) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: connectWallet,\n                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n                children: \"Connect your wallet\"\n            }, void 0, false, {\n                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                lineNumber: 294,\n                columnNumber: 9\n            }, this);\n        }\n        // If we are currently waiting for something, return a loading button\n        if (loading) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n                children: \"Loading...\"\n            }, void 0, false, {\n                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                lineNumber: 302,\n                columnNumber: 14\n            }, this);\n        }\n        // If connected user is the owner, and presale hasnt started yet, allow them to start the presale\n        if (isOwner && !presaleStarted) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n                onClick: startPresale,\n                children: \"Start Presale!\"\n            }, void 0, false, {\n                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                lineNumber: 308,\n                columnNumber: 9\n            }, this);\n        }\n        // If connected user is not the owner but presale hasn't started yet, tell them that\n        if (!presaleStarted) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n                    children: \"Presale hasnt started!\"\n                }, void 0, false, {\n                    fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                    lineNumber: 318,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                lineNumber: 317,\n                columnNumber: 9\n            }, this);\n        }\n        // If presale started, but hasn't ended yet, allow for minting during the presale period\n        if (presaleStarted && !presaleEnded) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n                        children: \"Presale has started!!! If your address is whitelisted, Mint a Crypto Dev \\uD83E\\uDD73\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                        lineNumber: 327,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n                        onClick: presaleMint,\n                        children: \"Presale Mint \\uD83D\\uDE80\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                        lineNumber: 331,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                lineNumber: 326,\n                columnNumber: 9\n            }, this);\n        }\n        // If presale started and has ended, its time for public minting\n        if (presaleStarted && presaleEnded) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().button),\n                onClick: publicMint,\n                children: \"Public Mint \\uD83D\\uDE80\"\n            }, void 0, false, {\n                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                lineNumber: 341,\n                columnNumber: 9\n            }, this);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Crypto Devs\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                        lineNumber: 351,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"Whitelist-Dapp\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                        lineNumber: 352,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"icon\",\n                        href: \"/favicon.ico\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                        lineNumber: 353,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                lineNumber: 350,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().main),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().title),\n                                children: \"Welcome to Crypto Devs!\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                                lineNumber: 357,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n                                children: \"Its an NFT collection for developers in Crypto.\"\n                            }, void 0, false, {\n                                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                                lineNumber: 358,\n                                columnNumber: 11\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().description),\n                                children: [\n                                    tokenIdsMinted,\n                                    \"/20 have been minted\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                                lineNumber: 361,\n                                columnNumber: 11\n                            }, this),\n                            renderButton()\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                        lineNumber: 356,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                            className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().image),\n                            src: \"./cryptodevs/0.svg\"\n                        }, void 0, false, {\n                            fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                            lineNumber: 367,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                        lineNumber: 366,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                lineNumber: 355,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"footer\", {\n                className: (_styles_Home_module_css__WEBPACK_IMPORTED_MODULE_6___default().footer),\n                children: \"Made with ❤ by Crypto Devs\"\n            }, void 0, false, {\n                fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n                lineNumber: 371,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/mauriciojunior/workspace/nft-collection/my-app/pages/index.tsx\",\n        lineNumber: 349,\n        columnNumber: 5\n    }, this);\n}\n_s(Home, \"uwgpewgrqwjQbgqKGXxGoH0n360=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ })

});